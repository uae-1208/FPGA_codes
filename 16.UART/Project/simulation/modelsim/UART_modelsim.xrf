vendor_name = ModelSim
source_file = 1, U:/Projects/FPGA/Examples/16.UART/Sim/RX_TB.v
source_file = 1, U:/Projects/FPGA/Examples/16.UART/RTL/RX.v
source_file = 1, U:/Projects/FPGA/Examples/16.UART/Project/db/UART.cbx.xml
design_name = RX
instance = comp, \valid_flag~output , valid_flag~output, RX, 1
instance = comp, \data_out[0]~output , data_out[0]~output, RX, 1
instance = comp, \data_out[1]~output , data_out[1]~output, RX, 1
instance = comp, \data_out[2]~output , data_out[2]~output, RX, 1
instance = comp, \data_out[3]~output , data_out[3]~output, RX, 1
instance = comp, \data_out[4]~output , data_out[4]~output, RX, 1
instance = comp, \data_out[5]~output , data_out[5]~output, RX, 1
instance = comp, \data_out[6]~output , data_out[6]~output, RX, 1
instance = comp, \data_out[7]~output , data_out[7]~output, RX, 1
instance = comp, \sys_clk~input , sys_clk~input, RX, 1
instance = comp, \sys_clk~inputclkctrl , sys_clk~inputclkctrl, RX, 1
instance = comp, \rx~input , rx~input, RX, 1
instance = comp, \re_reg1~feeder , re_reg1~feeder, RX, 1
instance = comp, \rst_n~input , rst_n~input, RX, 1
instance = comp, \rst_n~inputclkctrl , rst_n~inputclkctrl, RX, 1
instance = comp, \re_reg2~feeder , re_reg2~feeder, RX, 1
instance = comp, \re_reg3~feeder , re_reg3~feeder, RX, 1
instance = comp, \always1~0 , always1~0, RX, 1
instance = comp, \baud_cnt[0]~13 , baud_cnt[0]~13, RX, 1
instance = comp, \baud_cnt[8]~30 , baud_cnt[8]~30, RX, 1
instance = comp, \baud_cnt[9]~32 , baud_cnt[9]~32, RX, 1
instance = comp, \baud_cnt[9] , baud_cnt[9], RX, 1
instance = comp, \Equal1~0 , Equal1~0, RX, 1
instance = comp, \baud_cnt[10]~34 , baud_cnt[10]~34, RX, 1
instance = comp, \baud_cnt[10] , baud_cnt[10], RX, 1
instance = comp, \baud_cnt[11]~36 , baud_cnt[11]~36, RX, 1
instance = comp, \baud_cnt[11] , baud_cnt[11], RX, 1
instance = comp, \baud_cnt[12]~38 , baud_cnt[12]~38, RX, 1
instance = comp, \baud_cnt[12] , baud_cnt[12], RX, 1
instance = comp, \Equal0~1 , Equal0~1, RX, 1
instance = comp, \Equal0~0 , Equal0~0, RX, 1
instance = comp, \Equal0~2 , Equal0~2, RX, 1
instance = comp, \baud_cnt[12]~19 , baud_cnt[12]~19, RX, 1
instance = comp, \baud_cnt[0] , baud_cnt[0], RX, 1
instance = comp, \baud_cnt[1]~15 , baud_cnt[1]~15, RX, 1
instance = comp, \baud_cnt[1] , baud_cnt[1], RX, 1
instance = comp, \baud_cnt[2]~17 , baud_cnt[2]~17, RX, 1
instance = comp, \baud_cnt[2] , baud_cnt[2], RX, 1
instance = comp, \baud_cnt[3]~20 , baud_cnt[3]~20, RX, 1
instance = comp, \baud_cnt[3] , baud_cnt[3], RX, 1
instance = comp, \baud_cnt[4]~22 , baud_cnt[4]~22, RX, 1
instance = comp, \baud_cnt[4] , baud_cnt[4], RX, 1
instance = comp, \baud_cnt[5]~24 , baud_cnt[5]~24, RX, 1
instance = comp, \baud_cnt[5] , baud_cnt[5], RX, 1
instance = comp, \baud_cnt[6]~26 , baud_cnt[6]~26, RX, 1
instance = comp, \baud_cnt[6] , baud_cnt[6], RX, 1
instance = comp, \baud_cnt[7]~28 , baud_cnt[7]~28, RX, 1
instance = comp, \baud_cnt[7] , baud_cnt[7], RX, 1
instance = comp, \baud_cnt[8] , baud_cnt[8], RX, 1
instance = comp, \Equal1~2 , Equal1~2, RX, 1
instance = comp, \Equal1~1 , Equal1~1, RX, 1
instance = comp, \Equal1~3 , Equal1~3, RX, 1
instance = comp, \bit_cnt[0]~4 , bit_cnt[0]~4, RX, 1
instance = comp, \bit_cnt[0] , bit_cnt[0], RX, 1
instance = comp, \bit_cnt[1]~6 , bit_cnt[1]~6, RX, 1
instance = comp, \bit_cnt[1] , bit_cnt[1], RX, 1
instance = comp, \bit_cnt[2]~8 , bit_cnt[2]~8, RX, 1
instance = comp, \bit_cnt[2] , bit_cnt[2], RX, 1
instance = comp, \bit_cnt[3]~10 , bit_cnt[3]~10, RX, 1
instance = comp, \bit_cnt[3] , bit_cnt[3], RX, 1
instance = comp, \Equal2~0 , Equal2~0, RX, 1
instance = comp, \work_flag~0 , work_flag~0, RX, 1
instance = comp, \data_reg[7]~feeder , data_reg[7]~feeder, RX, 1
instance = comp, \always6~0 , always6~0, RX, 1
instance = comp, \always6~1 , always6~1, RX, 1
instance = comp, \data_reg[7] , data_reg[7], RX, 1
instance = comp, \data_reg[6]~feeder , data_reg[6]~feeder, RX, 1
instance = comp, \data_reg[6] , data_reg[6], RX, 1
instance = comp, \data_reg[5]~feeder , data_reg[5]~feeder, RX, 1
instance = comp, \data_reg[5] , data_reg[5], RX, 1
instance = comp, \data_reg[4]~feeder , data_reg[4]~feeder, RX, 1
instance = comp, \data_reg[4] , data_reg[4], RX, 1
instance = comp, \data_reg[3] , data_reg[3], RX, 1
instance = comp, \data_reg[2]~feeder , data_reg[2]~feeder, RX, 1
instance = comp, \data_reg[2] , data_reg[2], RX, 1
instance = comp, \data_reg[1]~feeder , data_reg[1]~feeder, RX, 1
instance = comp, \data_reg[1] , data_reg[1], RX, 1
instance = comp, \data_reg[0]~feeder , data_reg[0]~feeder, RX, 1
instance = comp, \data_reg[0] , data_reg[0], RX, 1
instance = comp, \data_out[0]~reg0feeder , data_out[0]~reg0feeder, RX, 1
instance = comp, \data_out[0]~reg0 , data_out[0]~reg0, RX, 1
instance = comp, \data_out[1]~reg0feeder , data_out[1]~reg0feeder, RX, 1
instance = comp, \data_out[1]~reg0 , data_out[1]~reg0, RX, 1
instance = comp, \data_out[2]~reg0feeder , data_out[2]~reg0feeder, RX, 1
instance = comp, \data_out[2]~reg0 , data_out[2]~reg0, RX, 1
instance = comp, \data_out[3]~reg0feeder , data_out[3]~reg0feeder, RX, 1
instance = comp, \data_out[3]~reg0 , data_out[3]~reg0, RX, 1
instance = comp, \data_out[4]~reg0feeder , data_out[4]~reg0feeder, RX, 1
instance = comp, \data_out[4]~reg0 , data_out[4]~reg0, RX, 1
instance = comp, \data_out[5]~reg0feeder , data_out[5]~reg0feeder, RX, 1
instance = comp, \data_out[5]~reg0 , data_out[5]~reg0, RX, 1
instance = comp, \data_out[6]~reg0feeder , data_out[6]~reg0feeder, RX, 1
instance = comp, \data_out[6]~reg0 , data_out[6]~reg0, RX, 1
instance = comp, \data_out[7]~reg0feeder , data_out[7]~reg0feeder, RX, 1
instance = comp, \data_out[7]~reg0 , data_out[7]~reg0, RX, 1
